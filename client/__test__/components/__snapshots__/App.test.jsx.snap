// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App component should render app component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Switch>
        <Route
          component={[Function]}
          exact={true}
          path="/"
        />
        <Route
          component={[Function]}
          path="/login"
        />
        <Route
          component={[Function]}
          path="/form"
        />
        <Route
          component={[Function]}
          path="/signup"
        />
        <Route
          component={[Function]}
          path="/order"
        />
        <Route
          component={[Function]}
          path="/order-list"
        />
        <Route
          component={[Function]}
          path="/order-history"
        />
        <Route
          component={[Function]}
          path="/add-menu"
        />
        <Route
          component={[Function]}
          path="/edit-menu"
        />
        <Route
          component={[Function]}
          path="/menu/:id/confirm-order"
        />
        <Route
          component={[Function]}
          path="/completed-order"
        />
        <Route
          component={[Function]}
          path="/error-page"
        />
      </Switch>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Route
            component={[Function]}
            exact={true}
            path="/"
          />,
          <Route
            component={[Function]}
            path="/login"
          />,
          <Route
            component={[Function]}
            path="/form"
          />,
          <Route
            component={[Function]}
            path="/signup"
          />,
          <Route
            component={[Function]}
            path="/order"
          />,
          <Route
            component={[Function]}
            path="/order-list"
          />,
          <Route
            component={[Function]}
            path="/order-history"
          />,
          <Route
            component={[Function]}
            path="/add-menu"
          />,
          <Route
            component={[Function]}
            path="/edit-menu"
          />,
          <Route
            component={[Function]}
            path="/menu/:id/confirm-order"
          />,
          <Route
            component={[Function]}
            path="/completed-order"
          />,
          <Route
            component={[Function]}
            path="/error-page"
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "exact": true,
            "path": "/",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "path": "/login",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "path": "/form",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "path": "/signup",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "path": "/order",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "path": "/order-list",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "path": "/order-history",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "path": "/add-menu",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "path": "/edit-menu",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "path": "/menu/:id/confirm-order",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "path": "/completed-order",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "path": "/error-page",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Switch>
          <Route
            component={[Function]}
            exact={true}
            path="/"
          />
          <Route
            component={[Function]}
            path="/login"
          />
          <Route
            component={[Function]}
            path="/form"
          />
          <Route
            component={[Function]}
            path="/signup"
          />
          <Route
            component={[Function]}
            path="/order"
          />
          <Route
            component={[Function]}
            path="/order-list"
          />
          <Route
            component={[Function]}
            path="/order-history"
          />
          <Route
            component={[Function]}
            path="/add-menu"
          />
          <Route
            component={[Function]}
            path="/edit-menu"
          />
          <Route
            component={[Function]}
            path="/menu/:id/confirm-order"
          />
          <Route
            component={[Function]}
            path="/completed-order"
          />
          <Route
            component={[Function]}
            path="/error-page"
          />
        </Switch>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Route
              component={[Function]}
              exact={true}
              path="/"
            />,
            <Route
              component={[Function]}
              path="/login"
            />,
            <Route
              component={[Function]}
              path="/form"
            />,
            <Route
              component={[Function]}
              path="/signup"
            />,
            <Route
              component={[Function]}
              path="/order"
            />,
            <Route
              component={[Function]}
              path="/order-list"
            />,
            <Route
              component={[Function]}
              path="/order-history"
            />,
            <Route
              component={[Function]}
              path="/add-menu"
            />,
            <Route
              component={[Function]}
              path="/edit-menu"
            />,
            <Route
              component={[Function]}
              path="/menu/:id/confirm-order"
            />,
            <Route
              component={[Function]}
              path="/completed-order"
            />,
            <Route
              component={[Function]}
              path="/error-page"
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "exact": true,
              "path": "/",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/login",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/form",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/signup",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/order",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/order-list",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/order-history",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/add-menu",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/edit-menu",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/menu/:id/confirm-order",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/completed-order",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/error-page",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
